#version 450

layout(local_size_x = 16, local_size_y = 16) in;
layout(rgba32f, binding = 0) uniform image2D out_texture;

layout(std430, binding = 1) buffer voxel_data {
    ivec4 data[];
};
uniform ivec3 u_VolumeDimension;

void main() {
    ivec2 coordinates = ivec2(gl_GlobalInvocationID.xy);

    // Use the total number of invocations to normalize
    // For local_size = (1,1) and dispatch = (WIDTH, HEIGHT, 1),
    // gl_NumWorkGroups.xy * gl_WorkGroupSize.xy gives the total size.

    vec2 dimensions = vec2(gl_NumWorkGroups.xy * gl_WorkGroupSize.xy);

    uint index = uint(coordinates.x + coordinates.y * dimensions.y);
    vec4 value;
    value.x = coordinates.x / dimensions.x;
    value.y = coordinates.y / dimensions.y;
    value.z = 1.0f;
    value.w = 1.0; // Alpha: 1.0

    imageStore(out_texture, coordinates, value);
}
